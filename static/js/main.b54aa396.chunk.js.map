{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoodslist","addSelectedGood","good","setState","removeSelectedGood","filter","item","showSelectedGood","length","map","index","join","buttonAddRemoveHandler","isSelected","buttonClearHandler","this","className","type","onClick","includes","buttonText","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAc,CACZC,kBAAmB,I,EAOrBC,gBAAkB,SAACC,GACjB,EAAKC,UAAS,gBAAGH,EAAH,EAAGA,kBAAH,MACZ,CAAEA,kBAAkB,GAAD,mBAAMA,GAAN,CAAyBE,S,EAIhDE,mBAAqB,SAACF,GACpB,EAAKC,UAAS,kBACZ,CAAEH,kBADU,EAAGA,kBACwBK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,U,EAInEK,iBAAmB,WACjB,IAAQP,EAAsB,EAAKD,MAA3BC,kBAER,OAAKA,EAAkBQ,OAIU,IAA7BR,EAAkBQ,OACbR,EAAkB,GAGpBA,EAAkBS,KAAI,SAACP,EAAMQ,GAClC,OAAIA,IAAUV,EAAkBQ,OAAS,EAChCN,EAGLQ,IAAUV,EAAkBQ,OAAS,EACjC,GAAN,OAAUN,EAAV,SAGI,GAAN,OAAUA,EAAV,SACCS,KAAK,IAjBC,qB,EAoBXC,uBAAyB,SAACC,EAAqBX,GAC7C,OAAOW,EACH,EAAKT,mBAAmBF,GACxB,EAAKD,gBAAgBC,I,EAG3BY,mBAAqB,WACnB,EAAKX,SAAS,CAAEH,kBAAmB,M,uDA/CrC,WACEe,KAAKZ,SAAS,CAAEH,kBAAmB,CAAC,W,oBAiDtC,WAAU,IAAD,OACP,OACE,sBAAKgB,UAAU,MAAf,UACE,0BAASA,UAAU,QAAnB,UACE,oBAAIA,UAAU,YAAd,4BAGA,mBAAGA,UAAU,wBAAb,SAAsCD,KAAKR,qBAC1CQ,KAAKhB,MAAMC,kBAAkBQ,OAE1B,wBACES,KAAK,SACLD,UAAU,uBACVE,QAAS,kBAAM,EAAKJ,sBAHtB,mBAQA,QAEN,oBAAIE,UAAU,aAAd,SACGnB,EAAgBY,KAAI,SAAAP,GACnB,IAAMW,EAAa,EAAKd,MAAMC,kBAAkBmB,SAASjB,GAEnDkB,EAAaP,EAAa,SAAW,SAE3C,OACE,qBACEG,UACEA,IAAU,mBAAoB,CAC5B,6BAA8BH,IAHpC,UAQGX,EACD,wBACEe,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKN,uBAAuBC,EAAYX,IAHzD,SAKGkB,MARElB,e,GAxFHmB,IAAMC,WA2GTxB,IC7HfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b54aa396.chunk.js","sourcesContent":["import React from 'react';\nimport className from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoodslist: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state:State = {\n    selectedGoodslist: [],\n  };\n\n  componentDidMount() {\n    this.setState({ selectedGoodslist: ['Jam'] });\n  }\n\n  addSelectedGood = (good: string) => {\n    this.setState(({ selectedGoodslist }) => (\n      { selectedGoodslist: [...selectedGoodslist, good] }\n    ));\n  };\n\n  removeSelectedGood = (good: string) => {\n    this.setState(({ selectedGoodslist }) => (\n      { selectedGoodslist: selectedGoodslist.filter(item => item !== good) }\n    ));\n  };\n\n  showSelectedGood = () => {\n    const { selectedGoodslist } = this.state;\n\n    if (!selectedGoodslist.length) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoodslist.length === 1) {\n      return selectedGoodslist[0];\n    }\n\n    return selectedGoodslist.map((good, index) => {\n      if (index === selectedGoodslist.length - 1) {\n        return good;\n      }\n\n      if (index === selectedGoodslist.length - 2) {\n        return `${good} and `;\n      }\n\n      return `${good}, `;\n    }).join('');\n  };\n\n  buttonAddRemoveHandler = (isSelected: boolean, good: string) => {\n    return isSelected\n      ? this.removeSelectedGood(good)\n      : this.addSelectedGood(good);\n  };\n\n  buttonClearHandler = () => {\n    this.setState({ selectedGoodslist: [] });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <section className=\"title\">\n          <h1 className=\"title__h1\">\n            Selected good:\n          </h1>\n          <p className=\"title__selected-goods\">{this.showSelectedGood()}</p>\n          {this.state.selectedGoodslist.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"button button__clear\"\n                onClick={() => this.buttonClearHandler()}\n              >\n                Clear\n              </button>\n            )\n            : null}\n        </section>\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(good => {\n            const isSelected = this.state.selectedGoodslist.includes(good);\n\n            const buttonText = isSelected ? 'Remove' : 'Select';\n\n            return (\n              <li\n                className={\n                  className('goods-list__item', {\n                    'goods-list__item--selected': isSelected,\n                  })\n                }\n                key={good}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => this.buttonAddRemoveHandler(isSelected, good)}\n                >\n                  {buttonText}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}