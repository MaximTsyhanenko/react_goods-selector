{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoodslist","addSelectedGood","good","setState","removeSelectedGood","filter","item","showSelectedGood","length","slice","join","buttonAddRemoveHandler","isSelected","buttonClearHandler","className","this","type","onClick","map","includes","buttonText","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAc,CACZC,kBAAmB,CAAC,Q,EAGtBC,gBAAkB,SAACC,GACjB,EAAKC,UAAS,gBAAGH,EAAH,EAAGA,kBAAH,MACZ,CAAEA,kBAAkB,GAAD,mBAAMA,GAAN,CAAyBE,S,EAIhDE,mBAAqB,SAACF,GACpB,EAAKC,UAAS,kBACZ,CAAEH,kBADU,EAAGA,kBACwBK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,U,EAInEK,iBAAmB,WACjB,IAAQP,EAAsB,EAAKD,MAA3BC,kBAER,OAAQA,EAAkBQ,QACxB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUR,EAAkB,GAA5B,gBACF,QACE,MAAM,GAAN,OAAUA,EACPS,MAAM,GAAI,GACVC,KAAK,MAFR,gBAEqBV,EAAkBA,EAAkBQ,OAAS,GAFlE,mB,EAMNG,uBAAyB,SAACC,EAAqBV,GAC7C,OAAOU,EACH,EAAKR,mBAAmBF,GACxB,EAAKD,gBAAgBC,I,EAG3BW,mBAAqB,WACnB,EAAKV,SAAS,CAAEH,kBAAmB,M,4CAGrC,WAAU,IAAD,OACP,OACE,sBAAKc,UAAU,MAAf,UACE,0BAASA,UAAU,QAAnB,UACE,qBAAIA,UAAU,YAAd,2BAEE,sBACEA,UAAU,wBADZ,SAGGC,KAAKR,wBAGTQ,KAAKhB,MAAMC,kBAAkBQ,OAE1B,wBACEQ,KAAK,SACLF,UAAU,uBACVG,QAAS,kBAAM,EAAKJ,sBAHtB,mBAQA,QAEN,oBAAIC,UAAU,aAAd,SACGjB,EAAgBqB,KAAI,SAAAhB,GACnB,IAAMU,EAAa,EAAKb,MAAMC,kBAAkBmB,SAASjB,GAEnDkB,EAAaR,EAAa,SAAW,SAE3C,OACE,qBACEE,UACEA,IAAU,mBAAoB,CAC5B,6BAA8BF,IAHpC,UAQGV,EACD,wBACEc,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKN,uBAAuBC,EAAYV,IAHzD,SAKGkB,MARElB,e,GA/EHmB,IAAMC,WAkGTxB,ICpHfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7e2afd3d.chunk.js","sourcesContent":["import React from 'react';\nimport className from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoodslist: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state:State = {\n    selectedGoodslist: ['Jam'],\n  };\n\n  addSelectedGood = (good: string) => {\n    this.setState(({ selectedGoodslist }) => (\n      { selectedGoodslist: [...selectedGoodslist, good] }\n    ));\n  };\n\n  removeSelectedGood = (good: string) => {\n    this.setState(({ selectedGoodslist }) => (\n      { selectedGoodslist: selectedGoodslist.filter(item => item !== good) }\n    ));\n  };\n\n  showSelectedGood = () => {\n    const { selectedGoodslist } = this.state;\n\n    switch (selectedGoodslist.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoodslist[0]} is selected`;\n      default:\n        return `${selectedGoodslist\n          .slice(0, -1)\n          .join(', ')} and ${selectedGoodslist[selectedGoodslist.length - 1]} are selected`;\n    }\n  };\n\n  buttonAddRemoveHandler = (isSelected: boolean, good: string) => {\n    return isSelected\n      ? this.removeSelectedGood(good)\n      : this.addSelectedGood(good);\n  };\n\n  buttonClearHandler = () => {\n    this.setState({ selectedGoodslist: [] });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <section className=\"title\">\n          <h1 className=\"title__h1\">\n            Selected good:\n            <span\n              className=\"title__selected-goods\"\n            >\n              {this.showSelectedGood()}\n            </span>\n          </h1>\n          {this.state.selectedGoodslist.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"button button__clear\"\n                onClick={() => this.buttonClearHandler()}\n              >\n                Clear\n              </button>\n            )\n            : null}\n        </section>\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(good => {\n            const isSelected = this.state.selectedGoodslist.includes(good);\n\n            const buttonText = isSelected ? 'Remove' : 'Select';\n\n            return (\n              <li\n                className={\n                  className('goods-list__item', {\n                    'goods-list__item--selected': isSelected,\n                  })\n                }\n                key={good}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => this.buttonAddRemoveHandler(isSelected, good)}\n                >\n                  {buttonText}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}